generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider          = "mysql"
    url               = env("DATABASE_URL")
    shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
    relationMode      = "prisma"
}

model Account {
    id        String   @id @default(uuid())
    createdAt DateTime @default(now())
    email     String
    name      String
    password  String

    token String?

    image_url        String?
    image_deleteHash String?

    hostedEvents Event[]

    @@unique([email])
    @@map("accounts")
}

model Event {
    id                 Int         @id @default(autoincrement())
    createdAt          DateTime    @default(now())
    inviteCode         String      @default(cuid())
    type               EventType   @default(AMIGOSECRETO)
    status             EventStatus @default(PENDING)
    name               String
    description        String?
    color              String?
    image_url          String?
    image_deleteHash   String?
    minPrice           Float?
    maxPrice           Float?
    allowInvite        Boolean     @default(false)
    allowProfileChange Boolean     @default(false)

    host      Account @relation(fields: [accountId], references: [id], onDelete: Cascade)
    accountId String

    guests Guest[]

    @@index([accountId])
    @@map("events")
}

model Guest {
    id               String      @id @default(uuid())
    name             String
    email            String
    image_url        String?
    image_deleteHash String?
    status           GuestStatus @default(PENDING)

    chosenGuest Guest?  @relation(fields: [guestId], references: [id], name: "chosenGuest", onDelete: NoAction, onUpdate: NoAction)
    guestId     String?

    event   Event @relation(fields: [eventId], references: [id])
    eventId Int

    guests Guest[] @relation(name: "chosenGuest")

    @@index([eventId])
    @@index([guestId])
    @@map("guests")
}

enum GuestStatus {
    PENDING
    CONFIRMED
    VISUALIZED
}

enum EventStatus {
    PENDING
    DIVULGATED
}

enum EventType {
    SORTEIO
    AMIGOSECRETO
}
