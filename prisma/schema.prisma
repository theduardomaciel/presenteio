generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider          = "mysql"
    relationMode      = "prisma"
    url               = env("DATABASE_URL")
    shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Account {
    id        String   @id @default(uuid())
    createdAt DateTime @default(now())

    email    String
    name     String
    password String? // Ã© opcional porque pode ser uma conta do Google

    image_url        String?
    image_deleteHash String?

    hostedEvents Event[]

    @@unique([email])
    @@map("accounts")
}

model Event {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())

    inviteCode String      @unique @default(cuid())
    type       EventType   @default(AMIGOSECRETO)
    status     EventStatus @default(PENDING)

    name        String
    description String?
    color       String?

    image_url        String?
    image_deleteHash String?

    minPrice Float?
    maxPrice Float?

    allowInvite        Boolean @default(false)
    allowProfileChange Boolean @default(false)

    host      Account @relation(fields: [accountId], references: [id], onDelete: Cascade)
    accountId String

    guests Guest[]

    @@index([accountId])
    @@map("events")
}

model Guest {
    id String @id @default(uuid())

    name             String
    email            String?
    image_url        String?
    image_deleteHash String?
    status           GuestStatus @default(PENDING)

    guestId            String? @unique
    correspondingGuest Guest?  @relation(fields: [guestId], references: [id], name: "correspondingGuest", onDelete: NoAction, onUpdate: NoAction)
    guest              Guest?  @relation(name: "correspondingGuest")

    event   Event? @relation(fields: [eventId], references: [id], onDelete: Cascade)
    eventId String

    @@index([eventId])
    @@index([guestId])
    @@map("guests")
}

enum GuestStatus {
    PENDING
    CONFIRMED
    VISUALIZED
}

enum EventStatus {
    PENDING
    DIVULGED
}

enum EventType {
    SORTEIO
    AMIGOSECRETO
}
